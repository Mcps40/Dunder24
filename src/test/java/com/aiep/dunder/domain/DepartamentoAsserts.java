package com.aiep.dunder.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DepartamentoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoAllPropertiesEquals(Departamento expected, Departamento actual) {
        assertDepartamentoAutoGeneratedPropertiesEquals(expected, actual);
        assertDepartamentoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoAllUpdatablePropertiesEquals(Departamento expected, Departamento actual) {
        assertDepartamentoUpdatableFieldsEquals(expected, actual);
        assertDepartamentoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoAutoGeneratedPropertiesEquals(Departamento expected, Departamento actual) {
        assertThat(expected)
            .as("Verify Departamento auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoUpdatableFieldsEquals(Departamento expected, Departamento actual) {
        assertThat(expected)
            .as("Verify Departamento relevant properties")
            .satisfies(e -> assertThat(e.getNombre_depto()).as("check nombre_depto").isEqualTo(actual.getNombre_depto()))
            .satisfies(e -> assertThat(e.getUbicacion_depto()).as("check ubicacion_depto").isEqualTo(actual.getUbicacion_depto()))
            .satisfies(e -> assertThat(e.getPresupuesto_depto()).as("check presupuesto_depto").isEqualTo(actual.getPresupuesto_depto()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDepartamentoUpdatableRelationshipsEquals(Departamento expected, Departamento actual) {
        // empty method
    }
}
